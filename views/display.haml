- file_name = File.expand_path(File.dirname(__FILE__)) + "/../public/results/#{name}.har"
- if File.exist? "#{file_name}"
	:javascript
		(function() {
		    var har = document.createElement("script");
		    har.src = "/har.js";
		    har.setAttribute("id", "har");
		    har.setAttribute("async", "true");
		    document.documentElement.firstChild.appendChild(har);
		})();
	= if "#{yslow}" == "yes" 
		.raw-fluid
			.span4{:style => "height: 300px !important; overflow: scroll;"}
				%table.table.table-condensed
					- file_name = File.expand_path(File.dirname(__FILE__)) + "/../public/results/#{name}.har"
					- yslow = %x(yslow -i grade -f plain -r ydefault -d #{file_name})
					- pp "#{yslow}.inspect"
					%h2 
						YSLOW 
					%pre 
						- yslow.inspect.gsub('"',"").split(/\\n/).each do |info|
							#{info}
			.span4{:style => "height: 300px !important; overflow: scroll;"}
				%p
				%img{:src => "/results/#{name}.webdriver.png"}
		- puts "#{yslow} #{file_name}"
	.har{:id =>"har",:"data-har" => "/results/#{name}.har", :validate => "false",:stats => "true",:height => "300"}
- else
	%script{:type => "text/javascript", :src => "http://fgnass.github.com/spin.js/dist/spin.js"}
	:javascript
		setTimeout(function(){
		   window.location.reload(1);
		}, 5000);
	.span12.offset3
		%p
		%p
			%h2 Testing : = #{www_url}
	.span12{:id => "foo"}
		:javascript
			var opts = {
				lines: 13, // The number of lines to draw
				length: 7, // The length of each line
				width: 4, // The line thickness
				radius: 10, // The radius of the inner circle
				corners: 1, // Corner roundness (0..1)
				rotate: 0, // The rotation offset
				color: '#000', // #rgb or #rrggbb
				speed: 1, // Rounds per second
				trail: 60, // Afterglow percentage
				shadow: false, // Whether to render a shadow
				hwaccel: false, // Whether to use hardware acceleration
				className: 'spinner', // The CSS class to assign to the spinner
				zIndex: 2e9, // The z-index (defaults to 2000000000)
				top: 'auto', // Top position relative to parent in px
				left: 'auto' // Left position relative to parent in px
			};
			var target = document.getElementById('foo');
			var spinner = new Spinner(opts).spin(target);