%p
- report_yslow = "#{yslow}"
- png_path = File.expand_path(File.dirname(__FILE__)) + "/../public/results/#{name}/#{name}*x11.png"
- png_nb = Dir.glob("#{png_path}").count
- if "#{png_nb}" == "#{cycles}"
	- Dir.glob("#{png_path}").count.times do |view_cycle|
		- png_path = File.expand_path(File.dirname(__FILE__)) + "/../public/results/#{name}/#{name}#{view_cycle}*g"
		- png_path = Dir["#{png_path}"]
		
		
		- png_path_wd = png_path[0]
		- png_path_x11 = png_path[1]
		
		- png_name_wd = File.basename(png_path_wd)
		- png_name_x11 = File.basename(png_path_x11)
		- har_full_path_blob = File.expand_path(File.dirname(__FILE__)) + "/../public/results/#{name}/#{name}#{view_cycle}.har"
		- har_full_path = Dir["#{har_full_path_blob}"]
		- har_full_path = har_full_path[0]
		- har_name = File.basename("#{har_full_path}")
		- yslow_xpi_full_path_blob = File.expand_path(File.dirname(__FILE__)) + "/../public/results/#{name}/#{name}#{view_cycle}.yslow.json"
		- yslow_xpi_full_path = Dir["#{yslow_xpi_full_path_blob}"]
		- yslow_xpi_full_path = yslow_xpi_full_path[0]
		- yslow_xpi_name = File.basename("#{yslow_xpi_full_path}")
		- yslow_xpi_total_score = 0
		- pagespeed_xpi_full_path_blob = File.expand_path(File.dirname(__FILE__)) + "/../public/results/#{name}/#{name}#{view_cycle}.pagespeed.json"
		- pagespeed_xpi_full_path = Dir["#{pagespeed_xpi_full_path_blob}"]
		- pagespeed_xpi_full_path = pagespeed_xpi_full_path[0]
		- pagespeed_xpi_name = File.basename("#{pagespeed_xpi_full_path}")
		- pagespeed_xpi_total_score = 0
		- mp4_full_path_blob = File.expand_path(File.dirname(__FILE__)) + "/../public/results/#{name}/#{name}#{view_cycle}.webm"
		- mp4_full_path = Dir["#{mp4_full_path_blob}"]
		- mp4_full_path = mp4_full_path[0]
		- mp4_name = File.basename("#{mp4_full_path}")
		.raw-fluid
			.span4{:style => "height: 200px !important; overflow: scroll;"}
				%table.table.table-condensed
					- yslow_xpi = JSON.parse( IO.read(yslow_xpi_full_path).gsub('=>',':') )
					%h3 
						YSLOW 
						- if "#{yslow_xpi_name}" != "" 
							%pre 
								Overall score : #{yslow_xpi["o"]} <br>
								- yslow_xpi["g"].each do |key,str| 
									#{key} : #{str["score"]}
									- if str["message"].to_s != ""
										<pre>#{str["message"]} </pre>
			.span4{:style => "height: 200px !important; overflow: scroll;"}
				%table.table.table-condensed
					- pagespeed_xpi = JSON.parse( IO.read(pagespeed_xpi_full_path).gsub('=>',':') )
					%h3
						PAGESPEED
						- if "#{pagespeed_xpi_name}" != "" 
							%pre
								Overall score : #{pagespeed_xpi["pageStats"]["overallScore"]} <br>
								- pagespeed_xpi["rules"].each do |key,str| 
									#{key["name"]} : #{key["score"]} 
									- if key["warnings"].to_s != ""
										<pre> #{key["warnings"]}</pre>
			.span4{:style => "height: 200px !important; overflow: scroll;"}
				%h3
					SCREENSHOT
				%img{:src => "/results/#{name}/#{png_name_wd}"}
				%img{:src => "/results/#{name}/#{png_name_x11}"}
		.raw-fluid		
			.span3
				%h3
					VIDEO
					%video{:width => "320", :height => "210", :controls => true}
						%source{:src => "/results/#{name}/#{mp4_name}", :type => 'video/webm'}
			.span9{:height => "210"}
				%h3
					HAR
				:javascript
					(function() {
					    var har = document.createElement("script");
					    har.src = "/har.js";
					    har.setAttribute("id", "har");
					    har.setAttribute("async", "true");
					    document.documentElement.firstChild.appendChild(har);
					})();
				.har{:id =>"har#{view_cycle}",:"data-har" => "/results/#{name}/#{har_name}", :validate => "false",:stats => "true",:height => "200"}
		.raw-fluid
			.span12
				- if File.expand_path(File.dirname(__FILE__)) + "/../public/results/#{name}/#{name}.afr"
					%h3 Security Check
					- secscan_file = File.expand_path(File.dirname(__FILE__)) + "/../public/results/#{name}/#{name}.afr" rescue secscan_file = ""
					- if  Dir.glob(secscan_file).count != 0
						- auditstore = Arachni::AuditStore.load(secscan_file)
						- if auditstore.issues.count != 0
							%table.hidden-phone.table.table-striped.table-hover.table-condensed.fixed{:style => "table-layout: fixed;word-wrap: break-word;"}
								%thead
									%tr
										%th{:style => "width: 23%"}
											Name
										%th{:style => "width: 26%"}
											URL
										%th{:style => "width: 25%"}
											Element
										%th{:style =>"width: 15%"}
											Input
										%th{:style => "width: 11%"}
											Severity
										%th{:style => "width: 15%"}
											References
											%a{:href => "#", :rel => "tooltip", :title => "Vulnerability definitions from Common Weakness Enumeration project."}
												%i.icon-info-sign
								- auditstore.issues.each do |issue|
									%tr{:onclick => "$('#description-#{issue.digest}').collapse( 'toggle' );"}
										%td
											#{issue.name}
										%td{:style => "overflow: hidden; white-space: nowrap; text-overflow: ellipsis; "}
											%i.icon-info-sign{:rel => "tooltip", :title => "#{issue.url}"}
											#{issue.url}
										%td
											#{issue.elem}  #{issue.var}
										%td.wrap
											#{issue.mod_name} 
										%td
											%p.label.issue.severity
												#{issue.severity}
										%td
											- issue.references.each do |key,url|
												%a{:href => "#{url}"}#{url} 
											- if issue.cwe_url
												%a{:href => "#{issue.cwe_url}"}
													CWE#{issue.cwe}
									%tr.description
										%td.description{:colspan => "7"}
											.description-container.collapse{:id =>"description-#{issue.digest}"}
												%blockquote
													#{issue.description}
						- else
							No issues found.
- else
	%script{:type => "text/javascript", :src => "/js/spin.js"}
	:javascript
		setTimeout(function(){
		   window.location.reload(1);
		}, 5000);
	.span12.offset3
		%p
		%p
			%h2 Testing : = #{www_url}
	.span12{:id => "foo"}
		:javascript
			var opts = {
				lines: 13, // The number of lines to draw
				length: 7, // The length of each line
				width: 4, // The line thickness
				radius: 10, // The radius of the inner circle
				corners: 1, // Corner roundness (0..1)
				rotate: 0, // The rotation offset
				color: '#000', // #rgb or #rrggbb
				speed: 1, // Rounds per second
				trail: 60, // Afterglow percentage
				shadow: false, // Whether to render a shadow
				hwaccel: false, // Whether to use hardware acceleration
				className: 'spinner', // The CSS class to assign to the spinner
				zIndex: 2e9, // The z-index (defaults to 2000000000)
				top: 'auto', // Top position relative to parent in px
				left: 'auto' // Left position relative to parent in px
			};
			var target = document.getElementById('foo');
			var spinner = new Spinner(opts).spin(target); 
